# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- '*'

stages:
  - stage: 'BuildSatge'
    displayName: 'Build Satge'
    jobs:
      - job: 'Build'
        pool: 
          name: Default
        variables:
          - name: branchNameToTileCase
            value: 'wwwww'
        steps:
          - powershell: (Get-Culture).TextInfo.ToTitleCase('refs/heads/users/tavallayi/feature/create-sandbox-environment' ) -replace 'refs/(heads/)?(.*)','$2' -replace '/',''
          - powershell: echo '##vso[task.setvariable variable=branchNameToTileCase]20'
          - powershell: Write-Host "##vso[task.setvariable variable=branchNameToTileCase](Get-Culture).TextInfo.ToTitleCase('refs/heads/users/tavallayi/feature/create-sandbox-environment' ) -replace 'refs/(heads/)?(.*)','$2' -replace '/',''"
          - powershell: Write-Host "aaa${{ variables.branchNameToTileCase }}111"
          - task: CmdLine@2
            inputs:
              script: |
                echo $(one)
                echo $(Build.SourceBranch)
                echo $(Build.SourceBranchName)
                echo ${{ replace(variables['Build.SourceBranch'], '/', '_') }}
                echo nnn${{ variables.testvar }}nnn
                echo aaa${{ variables.branchNameToTileCase }}111
                echo aaa$(branchNameToTileCase)111
                echo End
          - task: DotNetCoreCLI@2
            displayName: 'Restore the project'
            inputs:
              command: 'restore'
              projects: '**/*.csproj'
          
          - task: DotNetCoreCLI@2
            displayName: 'Build the project'
            inputs:
              command: 'build'
              arguments: '--configuration Release'
              projects: '**/*.csproj'
          
          - task: DotNetCoreCLI@2
            displayName: 'Publish the project'
            inputs:
              command: 'publish'
              projects: '**/*.csproj'
              publishWebProjects: false
              arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
              zipAfterPublish: true
          
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: test
      - deployment: 'Deploy'
        displayName: 'Deploy'
        environment: 'Default'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@0
                  inputs:
                    buildType: 'current'
                    artifactName: test
                    downloadPath: '$(System.ArtifactsDirectory)'
                - task: IISWebAppManagementOnMachineGroup@0
                  inputs:
                    EnableIIS: true
                    IISDeploymentType: 'IISWebsite'
                    ActionIISWebsite: 'CreateOrUpdateWebsite'
                    WebsiteName: 'DevOpsAndGithubIntegration'
                    WebsitePhysicalPath: '%SystemDrive%\temp\DevOpsAndGithubIntegration'
                    WebsitePhysicalPathAuth: 'WebsiteWindowsAuth'
                    WebsiteAuthUserName: '$(iisUser)'
                    WebsiteAuthUserPassword: '$(iisPassword)'
                    AddBinding: true
                    Bindings: '{"bindings":[{"protocol":"http","ipAddress":"All Unassigned","port":"7001","hostname":"","sslThumbprint":"","sniFlag":false}]}'
                    CreateOrUpdateAppPoolForWebsite: true
                    AppPoolNameForWebsite: 'DevOpsAndGithubIntegration'
                    DotNetVersionForWebsite: 'No Managed Code'
                    PipeLineModeForWebsite: 'Integrated'
                    AppPoolIdentityForWebsite: 'SpecificUser'
                    AppPoolUsernameForWebsite: '$(iisUser)'
                    AppPoolPasswordForWebsite: '$(iisPassword)'
                - task: IISWebAppManagementOnMachineGroup@0
                  inputs:
                    EnableIIS: true
                    IISDeploymentType: 'IISWebApplication'
                    ParentWebsiteNameForApplication: 'DevOpsAndGithubIntegration'
                    VirtualPathForApplication: '/test/$(Build.SourceBranchName)'
                    PhysicalPathForApplication: '%SystemDrive%\temp\DevOpsAndGithubIntegration\test/$(Build.SourceBranchName)'
                    ApplicationPhysicalPathAuth: 'ApplicationWindowsAuth'
                    ApplicationAuthUserName: '$(iisUser)'
                    ApplicationAuthUserPassword: '$(iisPassword)'
                    CreateOrUpdateAppPoolForApplication: true
                    AppPoolNameForApplication: 'DevOpsAndGithubIntegration_$(Build.SourceBranchName)'
                    DotNetVersionForApplication: 'No Managed Code'
                    PipeLineModeForApplication: 'Integrated'
                    AppPoolIdentityForApplication: 'SpecificUser'
                    AppPoolUsernameForApplication: '$(iisUser)'
                    AppPoolPasswordForApplication: '$(iisPassword)'
                - task: IISWebAppDeploymentOnMachineGroup@0
                  inputs:
                    WebSiteName: 'DevOpsAndGithubIntegration'
                    VirtualApplication: '\$(Build.SourceBranchName)'
                    Package: '$(System.ArtifactsDirectory)\**\*.zip'
                    
